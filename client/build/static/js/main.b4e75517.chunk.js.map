{"version":3,"sources":["components/Contact.js","components/Navbar.js","components/Homepage.js","components/Feedback.js","components/ViewFeedback.js","components/Footer.js","components/NewProjects.js","App.js","serviceWorker.js","index.js"],"names":["Contact","react_default","a","createElement","className","Card","style","width","Body","Text","ListGroup","ListGroupItem","index_esm","href","rel","target","NavTabs","location","useLocation","react_router_dom","to","pathname","src","alt","Homepage","Fragment","id","Img","variant","Title","map","placement","OverlayTrigger","trigger","key","overlay","Popover","concat","as","Content","Button","Feedback","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","name","value","onSubmit","preventDefault","_this$state","state","description","axios","post","then","result","alert","_this$state2","Form","Row","Group","Col","controlId","Label","Control","type","placeholder","rows","Component","Favorites","feedback","componentDidMount","get","res","console","log","data","catch","err","displayFeedback","length","i","Footer","mdbreact_esm","color","fluid","md","onClick","window","Date","getFullYear","NewProjects","App","Navbar","react_router","exact","path","component","ViewFeedback","components_Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b4e75517.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { FaEnvelope, FaPhoneAlt, FaFacebook, FaLinkedin, FaGitSquare } from 'react-icons/fa';\n\nfunction Contact() {\n  return (\n\n    <div className=\"contact-container\">\n      <Card style={{ width: \"35%\" }} className=\"contact-card\">\n        <Card.Body>\n          <Card.Text>Contact Me</Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem><h3><FaEnvelope className='email-icons' /> <a href=\"mailto:robbie2497@gmail.com\"><u className=\"black\"> robbie2497@gmail.com</u></a></h3></ListGroupItem>\n          <ListGroupItem><h3><FaPhoneAlt className='phone-icon' /> <u>(760) 553-0573</u></h3></ListGroupItem>\n          <ListGroupItem><h3><FaFacebook className='facebook-icon' /> <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/robert.mcgrew24\" target=\"_blank\"><u className=\"black\"> Robert McGrew</u></a></h3></ListGroupItem>\n          <ListGroupItem><h3><FaLinkedin className='linkedIn-icon' /> <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/robert-mcgrew-b487b2181?trk=people-guest_people_search-card\" target=\"_blank\"><u className=\"black\"> Robbie2497</u></a></h3></ListGroupItem>\n          <ListGroupItem><h3><FaGitSquare className='github-icons' /> <a rel=\"noopener noreferrer\" href=\"https://github.com/Robbie2497\" target=\"_blank\"><u className=\"black\"> Robbie2497</u></a></h3></ListGroupItem>\n        </ListGroup>\n        <Card.Body></Card.Body>\n      </Card>\n    </div>\n\n  );\n}\n\nexport default Contact;","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction NavTabs() {\n  // We'll go into the Hooks API later, for now, we are just using some code\n  // from the react-router docs (https://reacttraining.com/react-router/web/api/Hooks/uselocation)\n  // This allows the component to check the route any time the user uses a link to navigate.\n  const location = useLocation();\n\n  return (\n\n    <div className=\"navBarHeader\">\n      <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item ml-auto\">\n        <Link\n          to=\"/\"\n          className=\"robert-mcgrew\"\n          ><h1>Robert McGrew</h1></Link>\n          <Link\n            to=\"/\"\n            className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            About\n        </Link>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"/#projects\" rel=\"projects\" className={location.pathname === \"/newprojects\" ? \"nav-link active\" : \"nav-link\"}>Projects</a>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            to=\"/contact\"\n            className={location.pathname === \"/contact\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            Contact\n        </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            to=\"/feedback\"\n            className={location.pathname === \"/feedback\" ? \"nav-link active\" : \"nav-link\"}\n          >\n            Feedback\n        </Link>\n        </li>\n      </ul>\n      <img className={location.pathname === \"/\" ? \"header-picture\" : \"header-picture-hidden\"}\n        src=\"coding_2.jpg\"\n        alt=\"Wallpaper\" />\n        <h1 className=\"homepage-heading\">Full-Stack Web Developer</h1>\n      \n    </div>\n  );\n}\n\nexport default NavTabs;\n","import React from 'react';\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { FaInfoCircle } from 'react-icons/fa';\n\nfunction Homepage() {\n    return (\n        <>\n            <div className=\"container homePageFooter\">\n                <div className=\"about-me\">\n                    <section className=\"me\">\n                        <img className=\"my-img\"\n                            src=\"Profile_Picture.jpg\"\n                            alt=\"Robert McGrew\" />\n                        <p>Passionate about approaching challenges from different angles and collaborating with\n                        others to create meaningful web applications. Recently earned a certificate in Full Stack Development from the\n                        University of Utah and developed skills in HTML5, CSS3, Javascript, JQuery, Bootstrap, Node Js, MySQL, MongoDB, Express, and Handlebars JS. Known as an\n                        innovative problem-solver passionate about developing apps. Aim for each project is to best engage the audience for an impactful user-experience. Excited to leverage my\n                        skills in the future as part of a fast-paced, quality-driven team in order to build better experiences on the web.\n\n                        I have a strong passsion for learning and I have a lot to learn. I am looking for an opportunity to expand my skill set by\n                        working with senior developers and other begginers like myself to expand my skill set as well as give my\n                        best effort and bring what I have to offer to the company. I work great with others in a team setting, putting our ideas together to accomplish a task.\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec facilisis tempor augue. Nulla facilisi. Aliquam erat volutpat. Maecenas non lacinia felis, non ultrices sem. Proin lobortis turpis quis lobortis pellentesque. Fusce dapibus turpis quis dolor placerat, ac fringilla elit condimentum. Maecenas lacinia pellentesque sagittis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec nec lectus iaculis, pulvinar orci eget, rutrum nunc. Nullam pharetra venenatis ornare. Nunc ante velit, vestibulum sed lacus in, consectetur aliquam leo. Pellentesque pharetra nibh et lacus ullamcorper, quis euismod nulla dictum. Morbi ac ligula ac leo tristique pulvinar nec id dolor. Nam ipsum mi, cursus at malesuada ut, accumsan at magna. Maecenas iaculis, nulla bibendum dictum pulvinar, ligula ipsum luctus leo, vel dignissim nunc dui sed tellus. Nunc in felis lobortis, lacinia arcu non, vehicula leo. Etiam ut laoreet purus. Pellentesque in nibh nunc. Mauris scelerisqumpus nibh. Nam tincidunt lectus justo, ac lobortis dui dapibus at. Aliquam erat volutpat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Integer eu venenatis magna. Pellentesque dictum ultrices mattis. Nam faucibus tristique est dignissim pretium.</p>\n                    </section>\n                </div>\n            </div>\n\n<div className=\"testing-div\"></div>\n\n            <section id=\"projects\"><h1>Projects</h1></section>\n            <div className=\"projects-card-container\">\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"Project-2.png\" />\n                    <Card.Body>\n                        <Card.Title>Movie Favorites \n{['right' ].map((placement) => (\n    <OverlayTrigger\n      trigger=\"hover\"\n      key={placement}\n      placement={placement}\n      overlay={\n        <Popover id={`popover-positioned-${placement}`}>\n          <Popover.Title as=\"h3\">{`Movie Favorites`}</Popover.Title>\n          <Popover.Content>\n            <strong>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed luctus eget dui at consequat. Pellentesque placerat sed felis in mollis. Morbi placerat nunc in eros interdum malesuada. Vestibulum quis lorem quis orci faucibus bibendum. Maecenas eu placerat nibh, et mollis libero. Cras sodales laoreet risus eget rhoncus. Cras suscipit, tellus eget porta finibus, ligula nisi pretium orci, et bibendum risus justo ac nunc. Mauris id facilisis est.\n\nFusce dolor mauris, cursus eu neque a, finibus tristique massa. Integer efficitur pharetra accumsan. Suspendisse ac tincidunt augue, at volutpat nisi. Nunc dictum nisl ut sem commodo posuere. Etiam consequat quam vitae purus pharetra, vitae auctor felis mollis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras est enim, viverra quis commodo ut, pulvinar \n\nSed vel ada Integer blandit quam sapien, nec luctus nisl semper et. Maecenas ut tellus ut metus consectetur dictum vel eget odio. Aliquam bibendum libero eu turpis imperdiet feugiat. Duis consequat tincidunt ipsum sit amet auctor. Integer vel purus quis enim molestie lobortis. Phasellus tellus massa, viverra sit amet interdum at, tincidunt non velit. Integer et suscipit diam.\n            </strong>\n          </Popover.Content>\n        </Popover>\n      }\n    >\n      <Button variant=\"secondary\" className=\"pop-up-btn\"><FaInfoCircle /></Button>\n    </OverlayTrigger>\n  ))}\n                        </Card.Title>\n                        <Card.Text>\n                            In this project I worked with a team to create an application that would allow a user to create an account and search for movies with an API. The user also has the option to save any searched movies to their \"favorites\" list. The account the user creates is then saved to a database, so the user can log in at anytime to view saved movies, or add more!\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://projectdash.herokuapp.com/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"utah_views.png\" />\n                    <Card.Body>\n                        <Card.Title>Utah Views</Card.Title>\n                        <Card.Text>\n                            Some quick example text to build on the card title and make up the bulk of\n                            the card's content.\n  </Card.Text>\n  <Button variant=\"primary\" href=\"https://utahviews.herokuapp.com/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"Google_Books_API_App.png\" />\n                    <Card.Body>\n                        <Card.Title>Google Books</Card.Title>\n                        <Card.Text>\n                            An easy way to search your favorite books and where you can buy them. In this project, I utilized google's book API to get information on a searched book. You can view the book online and find where to buy the full book. Have a favorite book? Click favorite to save that book as a favorite for easy access later on!\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://immense-wildwood-67889.herokuapp.com/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"password_generator.jpeg\" />\n                    <Card.Body>\n                        <Card.Title>Password Generator</Card.Title>\n                        <Card.Text>\n                            In this project I created a password generator. When the red \"Generate Password\" button is clicked, you will be prompted with a series of questions regarding how unique you would like your password. Once you have answered all the questions, your random password will be shown in the box above the red \"Generate Password\" button.\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://robbie2497.github.io/password_generator-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"foodtruck.png\" />\n                    <Card.Body>\n                        <Card.Title>Wine and Cheese Foodtruck</Card.Title>\n                        <Card.Text>\n                            In this project I worked with a small team to create an application that would allow a foodtruck owner to display their business online with an option for customers to order ahead of time from their menu. With implementaion of the Google Maps API and a weather API, the food truck's location will update with current weather reports.\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://robbie2497.github.io/Project-1/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"https://www.poolparty.biz/wp-content/uploads/2018/06/SEMANTiCS-who-should-attend.png\" />\n                    <Card.Body>\n                        <Card.Title>Learning About Semantics</Card.Title>\n                        <Card.Text>\n                            In this project I took pre-developed website which had many bugs and was not accessible. Each element\n                            in the HTML was set to div, so it wasn't very sematic. I refactored the code using semantics to make\n                            the website more accessible. This was a challenging yet rewarding activity as I searched through the\n                            code looking for ways to fix the bugs, and how to change the elements so that they were semantically\n                            correct.\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://robbie2497.github.io/accessability-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"https://blog.rescuetime.com/wp-content/uploads/2018/01/photo-1506485338023-6ce5f36692df-1000x486.jpeg\" />\n                    <Card.Body>\n                        <Card.Title>Daily 9 to 5 Scheduler</Card.Title>\n                        <Card.Text>\n                            In this project I created a daily schedule application. You can enter text into the desired time\n                            frame and\n                            press the save button to save text to the local storage to prevent it from deleting when the page is\n                            refreshed. I also added a clear button to remove the text in one single click. As the day moves on,\n                            the\n                            text box will change colors. Green for future time, Red for current time, and gray for past time.\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://robbie2497.github.io/work_day_scheduler-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src=\"Scratch_Game.png\" />\n                    <Card.Body>\n                        <Card.Title>My First Code</Card.Title>\n                        <Card.Text>\n                            In this project I created game using Scratch. This was the very first thing I created when I first started getting into coding. I leared how \"if then\" statements work, and also learned a little about how to create a simple game using\n                            code. This project was a lot of fun and I hope to apply the new skills I learn to create an application that is more\n                            elaborate in the future!\n  </Card.Text>\n                        <Button variant=\"primary\" href=\"https://scratch.mit.edu/projects/368827932/\" target=\"blank\">Click here to see the  application live!</Button>\n                    </Card.Body>\n                </Card>\n            </div>\n        </>\n    );\n}\nexport default Homepage;","import React, { Component } from 'react';\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport axios from 'axios';\n\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      description: ''\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { name, description } = this.state;\n\n    axios.post('/feedback', { name, description })\n      .then((result) => {\n        alert(\"Thank you for the feedback!\")\n        this.setState({ name: '', description: '' });\n      });\n  }\n\n  render() {\n    const { name, description } = this.state;\n    return (\n      <>\n        <div className=\"feedback-text\">\n          <h5>I am always open to and appreciate feedback to expand my knowledge. If you have any comments, please submit the form below.</h5>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-4\"></div>\n          <div className=\"col-lg-4 feedback-form\">\n            <Form onSubmit={this.onSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"name.ControlTextarea1\">\n                  <Form.Label></Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={this.onChange} />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Leave a comment</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} type=\"text\" name=\"description\"\n                  value={description}\n                  onChange={this.onChange} />\n                <Button variant=\"primary\" type=\"submit\" className=\"feedback-submit-btn\">Submit</Button>\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"col-lg-4\"></div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nclass Favorites extends Component {\n    state = {\n        name: '',\n        description: '',\n        feedback: []\n    }\n\n    componentDidMount = () => {\n        axios.get('/feedback')\n            .then(res => {\n                console.log(res);\n                this.setState({ feedback: res.data })\n                console.log(this.state);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    displayFeedback = (feedback) => {\n        if (!feedback.length) return <div>\n            <h1>No Feedback has been submitted Yet</h1>\n        </div>\n        console.log(\"display feedback works...\")\n\n        return feedback.map((feedback, i) => (\n            <Card style={{ width: '18rem' }} key={i}>\n                <Card.Body>\n                    <Card.Title>{feedback.name}</Card.Title>\n                    <Card.Text>{feedback.description}</Card.Text>\n                </Card.Body>\n            </Card>\n        ));\n    };\n\n    render() {\n        return (\n            <header>\n                <h1 className=\"feedback-header\">Feedback that has been submitted</h1>\n                <div className=\"card-container\">\n                    {this.displayFeedback(this.state.feedback)}\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Favorites;","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\nimport { FaEnvelope, FaPhoneAlt, FaFacebook, FaLinkedin, FaGitSquare } from 'react-icons/fa';\n\n\nconst Footer = () => {\n\nconst submitFeedback = () => {\n  window.location=\"/viewfeedback\";\n}\n\n  return (\n    \n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n          <MDBRow className=\"footer\">\n              <MDBCol md=\"5\"></MDBCol>\n              <MDBCol md=\"3\" className=\"contactInfo\">\n            <h6 className=\"title\">Created by: Robert McGrew</h6>\n            <ul>\n              <li className=\"list-unstyled\">\n              <FaEnvelope className='email-icon' /> <a href=\"mailto:robbie2497@gmail.com\"><u className=\"contacts\"> robbie2497@gmail.com</u></a>\n              </li>\n              <li className=\"list-unstyled\">\n              <FaPhoneAlt className='phone-icon' /> <u className=\"contacts\">(760) 553-0573</u>\n              </li>\n              <li className=\"list-unstyled\">\n              <FaFacebook className='facebook-icon' /> <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/robert.mcgrew24\" target=\"_blank\"><u className=\"contacts\"> Robert McGrew</u></a>\n              </li>\n              <li className=\"list-unstyled\">\n          <FaLinkedin className='linkedIn-icon' /> <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/robert-mcgrew-b487b2181?trk=people-guest_people_search-card\" target=\"_blank\"><u className=\"contacts\"> Robbie2497</u></a>\n              </li>\n              <li className=\"list-unstyled\">\n              <FaGitSquare className='github-icon' /> <a rel=\"noopener noreferrer\" href=\"https://github.com/Robbie2497\" target=\"_blank\"><u className=\"contacts\"> Robbie2497</u></a>\n              </li>\n            </ul>\n            </MDBCol>\n            <MDBCol md=\"4\">\n              <button className=\"feedback\" onClick={submitFeedback}>Feedback</button>\n            </MDBCol>\n            </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: Robert McGrew\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, Button } from \"react-bootstrap\";\n\nexport default function NewProjects() {\n    return (\n        <div className=\"projects-card-container\">\n        <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"Project-2.png\" />\n        <Card.Body>\n          <Card.Title>Movie Favorites</Card.Title>\n          <Card.Text>\n          In this project I worked with a team to create an application that would allow a user to create an account and search for movies with an API. The user also has the option to save any searched movies to their \"favorites\" list. The account the user creates is then saved to a database, so the user can log in at anytime to view saved movies, or add more!\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://projectdash.herokuapp.com/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"Google_Books_API_App.png\" />\n        <Card.Body>\n          <Card.Title>Google Books</Card.Title>\n          <Card.Text>\n          An easy way to search your favorite books and where you can buy them. In this project, I utilized google's book API to get information on a searched book. You can view the book online and find where to buy the full book. Have a favorite book? Click favorite to save that book as a favorite for easy access later on!\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://immense-wildwood-67889.herokuapp.com/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"password_generator.jpeg\" />\n        <Card.Body>\n          <Card.Title>Password Generator</Card.Title>\n          <Card.Text>\n          In this project I created a password generator. When the red \"Generate Password\" button is clicked, you will be prompted with a series of questions regarding how unique you would like your password. Once you have answered all the questions, your random password will be shown in the box above the red \"Generate Password\" button.\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://robbie2497.github.io/password_generator-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"foodtruck.png\" />\n        <Card.Body>\n          <Card.Title>Wine and Cheese Foodtruck</Card.Title>\n          <Card.Text>\n          In this project I worked with a small team to create an application that would allow a foodtruck owner to display their business online with an option for customers to order ahead of time from their menu. With implementaion of the Google Maps API and a weather API, the food truck's location will update with current weather reports.\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://robbie2497.github.io/Project-1/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"https://www.poolparty.biz/wp-content/uploads/2018/06/SEMANTiCS-who-should-attend.png\" />\n        <Card.Body>\n          <Card.Title>Learning About Semantics</Card.Title>\n          <Card.Text>\n          In this project I took pre-developed website which had many bugs and was not accessible. Each element\n                    in the HTML was set to div, so it wasn't very sematic. I refactored the code using semantics to make\n                    the website more accessible. This was a challenging yet rewarding activity as I searched through the\n                    code looking for ways to fix the bugs, and how to change the elements so that they were semantically\n                    correct.\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://robbie2497.github.io/accessability-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"https://blog.rescuetime.com/wp-content/uploads/2018/01/photo-1506485338023-6ce5f36692df-1000x486.jpeg\" />\n        <Card.Body>\n          <Card.Title>Daily 9 to 5 Scheduler</Card.Title>\n          <Card.Text>\n          In this project I created a daily schedule application. You can enter text into the desired time\n                    frame and\n                    press the save button to save text to the local storage to prevent it from deleting when the page is\n                    refreshed. I also added a clear button to remove the text in one single click. As the day moves on,\n                    the\n                    text box will change colors. Green for future time, Red for current time, and gray for past time.\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://robbie2497.github.io/work_day_scheduler-homework/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the bulk of\n            the card's content.\n          </Card.Text>\n          <Button variant=\"primary\">Go somewhere</Button>\n        </Card.Body>\n      </Card>\n\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"Scratch_Game.png\" />\n        <Card.Body>\n          <Card.Title>My First Code</Card.Title>\n          <Card.Text>\n          In this project I created game using Scratch. This was the very first thing I created when I first started getting into coding. I leared how \"if then\" statements work, and also learned a little about how to create a simple game using\n                    code. This project was a lot of fun and I hope to apply the new skills I learn to create an application that is more\n                    elaborate in the future!\n          </Card.Text>\n          <Button variant=\"primary\" href=\"https://scratch.mit.edu/projects/368827932/\" target=\"blank\">Click here to see the  application live!</Button>\n        </Card.Body>\n      </Card>\n\n      </div>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Contact from './components/Contact';\nimport Navbar from './components/Navbar';\nimport Homepage from './components/Homepage';\nimport Feedback from './components/Feedback';\nimport ViewFeedback from './components/ViewFeedback';\nimport Footer from './components/Footer';\nimport NewProjects from './components/NewProjects';\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"page-container\">\n        <div className=\"content-wrap\">\n        <Navbar />\n        <Route exact path='/' component={Homepage} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/newprojects' component={NewProjects} />\n        <Route exact path='/feedback' component={Feedback} />\n        <Route exact path='/viewfeedback' component={ViewFeedback} />\n        <div className=\"footer\">\n        <Footer />\n        </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}